//
// Copyright (c) 2009, Markus Rickert
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice,
//   this list of conditions and the following disclaimer.
// * Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//

#ifndef RL_STD_FUTURE
#define RL_STD_FUTURE

#if defined(_MSC_FULL_VER) && _MSC_FULL_VER >= 190023918
#include <../include/future>
#elif defined(_MSC_VER)
#define BOOST_THREAD_PROVIDES_FUTURE
#include <boost/thread/future.hpp>

namespace std
{
	using ::boost::async;
	
	using ::boost::BOOST_THREAD_FUTURE;
	
	using ::boost::future_category;
	
	using ::boost::future_errc;
	
	using ::boost::future_error;
	
	using ::boost::future_status;
	
	using ::boost::launch;
	
	using ::boost::packaged_task;
	
	using ::boost::promise;
	
	using ::boost::shared_future;
}
#else // _MSC_VER
#include_next <future>
#endif // _MSC_VER

#endif // RL_STD_FUTURE
